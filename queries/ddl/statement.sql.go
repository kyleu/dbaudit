// Code generated by qtc from "statement.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/ddl/statement.sql:2
package ddl

//line queries/ddl/statement.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/statement.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/statement.sql:2
func StreamStatementDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/statement.sql:2
	qw422016.N().S(`
if exists (select * from sysobjects where name='statement' and xtype='U')
drop table "statement";
-- `)
//line queries/ddl/statement.sql:5
}

//line queries/ddl/statement.sql:5
func WriteStatementDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/statement.sql:5
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/statement.sql:5
	StreamStatementDrop(qw422016)
//line queries/ddl/statement.sql:5
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/statement.sql:5
}

//line queries/ddl/statement.sql:5
func StatementDrop() string {
//line queries/ddl/statement.sql:5
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/statement.sql:5
	WriteStatementDrop(qb422016)
//line queries/ddl/statement.sql:5
	qs422016 := string(qb422016.B)
//line queries/ddl/statement.sql:5
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/statement.sql:5
	return qs422016
//line queries/ddl/statement.sql:5
}

// --

//line queries/ddl/statement.sql:7
func StreamStatementCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/statement.sql:7
	qw422016.N().S(`
if not exists (select * from sysobjects where name='statement' and xtype='U')
create table "statement" (
  "id" uniqueidentifier not null,
  "session_id" int not null,
  "action" nvarchar(255) not null,
  "succeeded" bit not null,
  "principal" nvarchar(max) not null,
  "database" nvarchar(max) not null,
  "filename" nvarchar(max) not null,
  "host" nvarchar(max) not null,
  "transaction_id" int not null,
  "client_ip" nvarchar(max) not null,
  "duration" int not null,
  "connection_id" uniqueidentifier not null,
  "rows_affected" int not null,
  "rows_returned" int not null,
  "sql" nvarchar(max) not null,
  "types" nvarchar(max) not null,
  "values" nvarchar(max) not null,
  "occurred" datetime not null,
  primary key ("id")
);

if not exists (select * from sys.indexes where name='statement' and object_id=object_id('statement__action_idx'))
create index "statement__action_idx" on "statement" ("action");
-- `)
//line queries/ddl/statement.sql:33
}

//line queries/ddl/statement.sql:33
func WriteStatementCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/statement.sql:33
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/statement.sql:33
	StreamStatementCreate(qw422016)
//line queries/ddl/statement.sql:33
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/statement.sql:33
}

//line queries/ddl/statement.sql:33
func StatementCreate() string {
//line queries/ddl/statement.sql:33
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/statement.sql:33
	WriteStatementCreate(qb422016)
//line queries/ddl/statement.sql:33
	qs422016 := string(qb422016.B)
//line queries/ddl/statement.sql:33
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/statement.sql:33
	return qs422016
//line queries/ddl/statement.sql:33
}
