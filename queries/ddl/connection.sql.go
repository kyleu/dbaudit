// Code generated by qtc from "connection.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/ddl/connection.sql:2
package ddl

//line queries/ddl/connection.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/connection.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/connection.sql:2
func StreamConnectionDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/connection.sql:2
	qw422016.N().S(`
if exists (select * from sysobjects where name='connection' and xtype='U')
drop table "connection";
-- `)
//line queries/ddl/connection.sql:5
}

//line queries/ddl/connection.sql:5
func WriteConnectionDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/connection.sql:5
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/connection.sql:5
	StreamConnectionDrop(qw422016)
//line queries/ddl/connection.sql:5
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/connection.sql:5
}

//line queries/ddl/connection.sql:5
func ConnectionDrop() string {
//line queries/ddl/connection.sql:5
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/connection.sql:5
	WriteConnectionDrop(qb422016)
//line queries/ddl/connection.sql:5
	qs422016 := string(qb422016.B)
//line queries/ddl/connection.sql:5
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/connection.sql:5
	return qs422016
//line queries/ddl/connection.sql:5
}

// --

//line queries/ddl/connection.sql:7
func StreamConnectionCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/connection.sql:7
	qw422016.N().S(`
if not exists (select * from sysobjects where name='connection' and xtype='U')
create table "connection" (
  "id" uniqueidentifier not null,
  "name" nvarchar(max) not null,
  "icon" nvarchar(max) not null,
  "engine" nvarchar(255) not null,
  "server" nvarchar(max) not null,
  "port" int not null,
  "username" nvarchar(max) not null,
  "password" nvarchar(max) not null,
  "database" nvarchar(max) not null,
  "schema" nvarchar(max) not null,
  "conn_override" nvarchar(max) not null,
  primary key ("id")
);

if not exists (select * from sys.indexes where name='connection' and object_id=object_id('connection__engine_idx'))
create index "connection__engine_idx" on "connection" ("engine");
-- `)
//line queries/ddl/connection.sql:26
}

//line queries/ddl/connection.sql:26
func WriteConnectionCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/connection.sql:26
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/connection.sql:26
	StreamConnectionCreate(qw422016)
//line queries/ddl/connection.sql:26
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/connection.sql:26
}

//line queries/ddl/connection.sql:26
func ConnectionCreate() string {
//line queries/ddl/connection.sql:26
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/connection.sql:26
	WriteConnectionCreate(qb422016)
//line queries/ddl/connection.sql:26
	qs422016 := string(qb422016.B)
//line queries/ddl/connection.sql:26
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/connection.sql:26
	return qs422016
//line queries/ddl/connection.sql:26
}
